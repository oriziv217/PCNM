package PCNMClient.PCNMClientView;

import PCNMClient.PCNMClientController.WorkstationCTRL;
import PCNMClient.PCNMClientStart;
import static PCNMClient.PCNMClientView.WindowMustHave.showDialog;
import java.awt.Font;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ori ziv
 */
public class WorkstationSCR extends javax.swing.JPanel {
    private ArrayList<String[]> types;
    private ArrayList<String> ws_tbl;
    private int rowCounter;
    private boolean[] rowsToShow;
    private String[][] tableContent;
    private FormFrame wsTableFrame;
    boolean doneInit;
    private int fltrField;
    private String fltrStirng;
    private boolean fltrEnabled;
    private int fltrImp;
    private String fltrType;
    private int fltrMinScore;
    private boolean isUpdate;
    private FormFrame addWorkstationForm;

    /**
     * Creates new form WorkstationSCR
     */
    public WorkstationSCR() {
        doneInit = false;
        fltrField = 0;
        fltrStirng = "";
        fltrEnabled = false;
        fltrImp = 0;
        fltrType = "Show All";
        ArrayList<String> wstypes = new ArrayList<String>(PCNMClientStart.cur_ent.getStringWstypes());
        String[] row;
        types = new ArrayList<String[]>();
        for (String typ : wstypes) {
            row = typ.split(",");
            types.add(row);
        }
        initComponents();
        doneInit = true;
    }

    public WorkstationSCR(ArrayList<String> filters) {
        this();
        doneInit = false;
        if (filters.size() == 5)
        {
            txtName.setText(filters.get(0));
            txtDescription.setText(filters.get(1));
            cmbType.setSelectedItem(filters.get(2));
            cmbImportance.setSelectedItem(filters.get(3));
            cmbStatus.setSelectedIndex(4);
        }
        doneInit = true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlAddWorkStationForm = new javax.swing.JPanel();
        lblAddWorkstationTitle = new javax.swing.JLabel();
        lblAddWorkstationName = new javax.swing.JLabel();
        lblAddWorkstationDescription = new javax.swing.JLabel();
        lblAddWorkstationImportance = new javax.swing.JLabel();
        lblAddWorkstationType = new javax.swing.JLabel();
        lblAddWorkstationMinRate = new javax.swing.JLabel();
        lblAddWorkstationStatus = new javax.swing.JLabel();
        txtAddWorkstationMinRate = new javax.swing.JTextField();
        txtAddWorkstationDescription = new javax.swing.JTextField();
        txtAddWorkstationName = new javax.swing.JTextField();
        spnAddWorkstationImportance = new javax.swing.JSpinner();
        cmbAddWorkstationStatus = new javax.swing.JComboBox();
        cmbAddWorkstationType = new javax.swing.JComboBox();
        btnAddWorkstationOK = new javax.swing.JButton();
        btnAddWorkstationCancel = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        lblScreenTitle = new javax.swing.JLabel();
        btnQuit = new javax.swing.JButton();
        lblSearchTitle = new javax.swing.JLabel();
        lblSearchName = new javax.swing.JLabel();
        lblSearchDescription = new javax.swing.JLabel();
        lblSearchType = new javax.swing.JLabel();
        lblSearchImportance = new javax.swing.JLabel();
        lblSearchStatus = new javax.swing.JLabel();
        txtDescription = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        cmbType = new javax.swing.JComboBox();
        cmbStatus = new javax.swing.JComboBox();
        cmbImportance = new javax.swing.JComboBox();
        btnClose = new javax.swing.JButton();
        lblNoFilter = new javax.swing.JLabel();

        pnlAddWorkStationForm.setBackground(java.awt.Color.white);
        pnlAddWorkStationForm.setMinimumSize(new java.awt.Dimension(310, 420));

        lblAddWorkstationTitle.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblAddWorkstationTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAddWorkstationTitle.setText("Add New Workstation");
        lblAddWorkstationTitle.setName("lblAddWorkstationTitle"); // NOI18N

        lblAddWorkstationName.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblAddWorkstationName.setText("Name:");

        lblAddWorkstationDescription.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblAddWorkstationDescription.setText("Description:");

        lblAddWorkstationImportance.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblAddWorkstationImportance.setText("Importance:");

        lblAddWorkstationType.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblAddWorkstationType.setText("Type:");

        lblAddWorkstationMinRate.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblAddWorkstationMinRate.setText("Minimal Rate:");

        lblAddWorkstationStatus.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblAddWorkstationStatus.setText("Status:");

        txtAddWorkstationMinRate.setEditable(false);
        txtAddWorkstationMinRate.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtAddWorkstationMinRate.setToolTipText("");

        txtAddWorkstationDescription.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtAddWorkstationDescription.setToolTipText("");

        txtAddWorkstationName.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtAddWorkstationName.setToolTipText("");

        spnAddWorkstationImportance.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        spnAddWorkstationImportance.setModel(new javax.swing.SpinnerNumberModel(1.0d, 0.1d, 1.9d, 0.1d));

        cmbAddWorkstationStatus.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cmbAddWorkstationStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Enabled", "Disabled", "Suspended" }));

        cmbAddWorkstationType.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cmbAddWorkstationType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbAddWorkstationTypeActionPerformed(evt);
            }
        });

        btnAddWorkstationOK.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnAddWorkstationOK.setText("OK");
        btnAddWorkstationOK.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAddWorkstationOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddWorkstationOKActionPerformed(evt);
            }
        });

        btnAddWorkstationCancel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnAddWorkstationCancel.setText("Cancel");
        btnAddWorkstationCancel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAddWorkstationCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddWorkstationCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAddWorkStationFormLayout = new javax.swing.GroupLayout(pnlAddWorkStationForm);
        pnlAddWorkStationForm.setLayout(pnlAddWorkStationFormLayout);
        pnlAddWorkStationFormLayout.setHorizontalGroup(
            pnlAddWorkStationFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddWorkStationFormLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAddWorkStationFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlAddWorkStationFormLayout.createSequentialGroup()
                        .addGroup(pnlAddWorkStationFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAddWorkstationMinRate)
                            .addComponent(lblAddWorkstationDescription)
                            .addComponent(lblAddWorkstationName)
                            .addComponent(lblAddWorkstationImportance)
                            .addComponent(lblAddWorkstationStatus)
                            .addComponent(lblAddWorkstationType))
                        .addGap(18, 18, 18)
                        .addGroup(pnlAddWorkStationFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbAddWorkstationType, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbAddWorkstationStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spnAddWorkstationImportance, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAddWorkstationName, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAddWorkstationDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAddWorkstationMinRate, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlAddWorkStationFormLayout.createSequentialGroup()
                        .addComponent(btnAddWorkstationOK, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAddWorkstationCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(lblAddWorkstationTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlAddWorkStationFormLayout.setVerticalGroup(
            pnlAddWorkStationFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddWorkStationFormLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAddWorkstationTitle)
                .addGap(18, 18, 18)
                .addGroup(pnlAddWorkStationFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddWorkstationName)
                    .addComponent(txtAddWorkstationName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlAddWorkStationFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddWorkstationDescription)
                    .addComponent(txtAddWorkstationDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlAddWorkStationFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddWorkstationImportance)
                    .addComponent(spnAddWorkstationImportance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlAddWorkStationFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddWorkstationType)
                    .addComponent(cmbAddWorkstationType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlAddWorkStationFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddWorkstationMinRate)
                    .addComponent(txtAddWorkstationMinRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlAddWorkStationFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddWorkstationStatus)
                    .addComponent(cmbAddWorkstationStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlAddWorkStationFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddWorkstationOK)
                    .addComponent(btnAddWorkstationCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        for (String[] typ : types) {
            cmbAddWorkstationType.addItem(typ[1]);
        }

        setBackground(java.awt.Color.white);
        setMinimumSize(new java.awt.Dimension(600, 600));
        setPreferredSize(new java.awt.Dimension(600, 600));

        btnSearch.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.setToolTipText("Close screen and return to log-in screen");
        btnSearch.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnSearch.setInheritsPopupMenu(true);
        btnSearch.setName("btnSearch"); // NOI18N
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        lblScreenTitle.setFont(new java.awt.Font("Times New Roman", 1, 48)); // NOI18N
        lblScreenTitle.setForeground(java.awt.Color.red);
        lblScreenTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblScreenTitle.setText("Workstations Management");
        lblScreenTitle.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblScreenTitle.setName("lblScreenTitle"); // NOI18N

        btnQuit.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnQuit.setForeground(java.awt.Color.red);
        btnQuit.setText("Quit");
        btnQuit.setToolTipText("Quit PCNM");
        btnQuit.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnQuit.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnQuit.setInheritsPopupMenu(true);
        btnQuit.setName("btnQuit"); // NOI18N
        btnQuit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitActionPerformed(evt);
            }
        });

        lblSearchTitle.setBackground(java.awt.Color.white);
        lblSearchTitle.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        lblSearchTitle.setForeground(java.awt.Color.red);
        lblSearchTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSearchTitle.setText("Search For Workstations");

        lblSearchName.setBackground(java.awt.Color.white);
        lblSearchName.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        lblSearchName.setText("Search by Workstation name:");

        lblSearchDescription.setBackground(java.awt.Color.white);
        lblSearchDescription.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        lblSearchDescription.setText("Search by Workstation Description:");

        lblSearchType.setBackground(java.awt.Color.white);
        lblSearchType.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        lblSearchType.setText("Search by Workstation Type:");

        lblSearchImportance.setBackground(java.awt.Color.white);
        lblSearchImportance.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        lblSearchImportance.setText("Search by Workstation Importance:");

        lblSearchStatus.setBackground(java.awt.Color.white);
        lblSearchStatus.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        lblSearchStatus.setText("Search by Workstation Status:");

        txtDescription.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N

        txtName.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N

        cmbType.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        cmbType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All Types" }));

        cmbStatus.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        cmbStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Any Status", "Enabled", "Disabled", "Suspended" }));

        cmbImportance.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        cmbImportance.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All", "Greater then 1", "Less then 1" }));

        btnClose.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnClose.setForeground(java.awt.Color.red);
        btnClose.setToolTipText("Close screen and return to log-in screen");
        btnClose.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnClose.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnClose.setInheritsPopupMenu(true);
        btnClose.setLabel("Close");
        btnClose.setName("btnClose"); // NOI18N
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        lblNoFilter.setBackground(java.awt.Color.white);
        lblNoFilter.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblNoFilter.setForeground(java.awt.Color.red);
        lblNoFilter.setText("Leave text fields empty for all workstations");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblSearchTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnQuit, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lblScreenTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 585, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 15, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblSearchDescription)
                                    .addComponent(lblSearchName)
                                    .addComponent(lblSearchType))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtName)
                                    .addComponent(txtDescription)
                                    .addComponent(cmbType, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblSearchImportance)
                                    .addComponent(lblSearchStatus))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbImportance, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnSearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 5, Short.MAX_VALUE))
                    .addComponent(lblNoFilter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblScreenTitle)
                .addGap(11, 11, 11)
                .addComponent(lblSearchTitle)
                .addGap(18, 18, 18)
                .addComponent(lblNoFilter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSearchName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSearchDescription)
                    .addComponent(txtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSearchType)
                    .addComponent(cmbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSearchImportance)
                    .addComponent(cmbImportance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblSearchStatus)
                    .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnQuit, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClose, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        if (PCNMClientStart.workstationSearchFilters.size() == 5)
        txtDescription.setText(PCNMClientStart.workstationSearchFilters.get(1));
        if (PCNMClientStart.workstationSearchFilters.size() == 5)
        txtName.setText(PCNMClientStart.workstationSearchFilters.get(0));
        for (String[] typ : types) {
            cmbType.addItem(typ[1]);
        }
        if (PCNMClientStart.workstationSearchFilters.size() == 5)
        cmbType.setSelectedIndex(typStrToInt(PCNMClientStart.workstationSearchFilters.get(3)));
        if (PCNMClientStart.workstationSearchFilters.size() == 5) {
            String sts = PCNMClientStart.workstationSearchFilters.get(4);
            int index = -1;
            switch (sts) {
                case "Any Status":
                index = 0;
                break;
                case "Enabled":
                index = 1;
                break;
                case "Disabled":
                index = 2;
                break;
                case "Suspended":
                index = 3;
                break;
            }
            cmbStatus.setSelectedIndex(index);
        }
        if (PCNMClientStart.workstationSearchFilters.size() == 5) {
            String imp = PCNMClientStart.workstationSearchFilters.get(2);
            int index = -1;
            switch (imp) {
                case "All":
                index = 0;
                break;
                case "Greater then 1":
                index = 1;
                break;
                case "Less then 1":
                index = 2;
                break;
            }
            cmbImportance.setSelectedIndex(index);
        }
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String name = txtName.getText();
        String description = txtDescription.getText();
        String importance = (String)cmbImportance.getSelectedItem();
        String type = (String)cmbType.getSelectedItem();
        String status = (String)cmbStatus.getSelectedItem();
        try {
            WorkstationCTRL.searchBtnPressed(name, description, importance, type, status);
        } catch (IOException ex) {
           showDialog(this, "Lost Connection with the server", DialogType.ERROR);
            System.exit(0);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnQuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitActionPerformed
        WorkstationCTRL.QuitBtnPressed();
    }//GEN-LAST:event_btnQuitActionPerformed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        WorkstationCTRL.closeBtnPressed();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnAddWorkstationOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddWorkstationOKActionPerformed
        String name = txtAddWorkstationName.getText();
        String description = txtAddWorkstationDescription.getText();
        double importance = (Double)spnAddWorkstationImportance.getValue();
        int type = cmbAddWorkstationType.getSelectedIndex();
        String status = (String)cmbAddWorkstationStatus.getSelectedItem();
        if (name.isEmpty() || description.isEmpty() || type == -1 || status.isEmpty()) {
            showDialog(pnlAddWorkStationForm, "All fields are mandatory.", DialogType.INFO);
            return;
        }
//        if (!isUpdate) {
//            for (int i = 0 ; i < tableContent.length ; i ++) {
//                if (name.equals(tableContent[i][1])) {
//                    showDialog(pnlAddUser, "User type's name must be unique.", DialogType.INFO);
//                    return;
//                }
//            }
//        }
        try {
            if (!WorkstationCTRL.isNameUnique(name)) {
                showDialog(pnlAddWorkStationForm, "Workstation Name must be unique.", DialogType.INFO);
                return;
            }
        } catch (IOException ex) {
            showDialog(pnlAddWorkStationForm, ex.getMessage(), DialogType.ERROR);
            addWorkstationForm.dispose();
            addWorkstationClearFields();
            wsTableFrame.setEnabled(true);
            wsTableFrame.requestFocus();
            return;
        }
        try {
            WorkstationCTRL.AddWorkstationBtnPressed(name, description, importance, status,
                                                    types.get(type)[0], types.get(type)[1], types.get(type)[2], types.get(type)[3], types.get(type)[4]);
        } catch (IOException ex) {
            showDialog(pnlAddWorkStationForm, "Lost Connection with the server", DialogType.ERROR);
            System.exit(0);
        }
        addWorkstationForm.dispose();
        addWorkstationClearFields();
        wsTableFrame.setEnabled(true);
        wsTableFrame.requestFocus();
    }//GEN-LAST:event_btnAddWorkstationOKActionPerformed

    private void btnAddWorkstationCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddWorkstationCancelActionPerformed
        addWorkstationClearFields();
        addWorkstationForm.dispose();
        wsTableFrame.setEnabled(true);
        wsTableFrame.requestFocus();
    }//GEN-LAST:event_btnAddWorkstationCancelActionPerformed

    private void cmbAddWorkstationTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbAddWorkstationTypeActionPerformed
        int selected = cmbAddWorkstationType.getSelectedIndex();
        if (selected == -1) {
            txtAddWorkstationMinRate.setText("");
            return;
        }
        String[] typ = types.get(selected);
        txtAddWorkstationMinRate.setText(typ[3]);
    }//GEN-LAST:event_cmbAddWorkstationTypeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddWorkstationCancel;
    private javax.swing.JButton btnAddWorkstationOK;
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnQuit;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox cmbAddWorkstationStatus;
    private javax.swing.JComboBox cmbAddWorkstationType;
    private javax.swing.JComboBox cmbImportance;
    private javax.swing.JComboBox cmbStatus;
    private javax.swing.JComboBox cmbType;
    private javax.swing.JLabel lblAddWorkstationDescription;
    private javax.swing.JLabel lblAddWorkstationImportance;
    private javax.swing.JLabel lblAddWorkstationMinRate;
    private javax.swing.JLabel lblAddWorkstationName;
    private javax.swing.JLabel lblAddWorkstationStatus;
    private javax.swing.JLabel lblAddWorkstationTitle;
    private javax.swing.JLabel lblAddWorkstationType;
    private javax.swing.JLabel lblNoFilter;
    private javax.swing.JLabel lblScreenTitle;
    private javax.swing.JLabel lblSearchDescription;
    private javax.swing.JLabel lblSearchImportance;
    private javax.swing.JLabel lblSearchName;
    private javax.swing.JLabel lblSearchStatus;
    private javax.swing.JLabel lblSearchTitle;
    private javax.swing.JLabel lblSearchType;
    private javax.swing.JPanel pnlAddWorkStationForm;
    private javax.swing.JSpinner spnAddWorkstationImportance;
    private javax.swing.JTextField txtAddWorkstationDescription;
    private javax.swing.JTextField txtAddWorkstationMinRate;
    private javax.swing.JTextField txtAddWorkstationName;
    private javax.swing.JTextField txtDescription;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables

    private void addWorkstationClearFields() {
        txtAddWorkstationName.setText("");
        txtAddWorkstationDescription.setText("");
        spnAddWorkstationImportance.setValue(new Double(1.0));
        cmbAddWorkstationType.setSelectedIndex(-1);
        cmbAddWorkstationStatus.setSelectedIndex(0);
    }
    
    private WindowListener exitListener = new WindowAdapter() {
        @Override
        public void windowClosing(WindowEvent e) {
            addWorkstationClearFields();
            addWorkstationForm.dispose();
            wsTableFrame.setEnabled(true);
            wsTableFrame.requestFocus();
        }
    };

    private int typStrToInt(String typeStr) {
        if (typeStr.equals("All Types"))
            return 0;
        else
            for (int i = 0 ; i < types.size() ; i ++)
                if (typeStr.equals(types.get(i)[1]))
                    return i+1;
        return -1;
    }
}
